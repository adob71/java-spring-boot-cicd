name: cicd

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  cicd:

    runs-on: ubuntu-latest

    steps:

    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build jar with Maven
      run: |
        ./mvnw clean package

    - name: Build image with Docker
      run: |
        docker build -t greeting-api-openjdk-17-oracle:0.0.1 .

        docker image tag \
        greeting-api-openjdk-17-oracle:0.0.1 \
        ${{secrets.AWS_ACCOUNT_ID}}.dkr.ecr.${{secrets.AWS_REGION}}.amazonaws.com/greeting-api-openjdk-17-oracle:0.0.1

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
        aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
        aws-region: ${{secrets.AWS_REGION}}

    - name: Login to AWS ECR
      id: 'AWS'
      uses: aws-actions/amazon-ecr-login@v1

    - name: Push image to AWS ECR
      run: |
        docker push \
        ${{secrets.AWS_ACCOUNT_ID}}.dkr.ecr.${{secrets.AWS_REGION}}.amazonaws.com/greeting-api-openjdk-17-oracle:0.0.1

    - name: Configure kubeconfig for AWS EKS
      run: |
        aws eks update-kubeconfig --region ${{secrets.AWS_REGION}} --name ${{secrets.AWS_CLUSTER_NAME}} 

    - name: Deploy image to AWS EKS
      run: |
        sed -i "s/aws_account_id/${{secrets.AWS_ACCOUNT_ID}}/g;s/aws_region/${{secrets.AWS_REGION}}/g" greeting-api-deployment.yaml
        kubectl apply -f greeting-api-deployment.yaml
        kubectl apply -f greeting-api-service.yaml

