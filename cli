./mvnw spring-boot:run
./mvnw clean package
java -jar target/greeting-api-0.0.1-SNAPSHOT.jar

docker image ls

docker rmi -f image-id
docker rmi -f \
greeting-api-openjdk-17-oracle:0.0.1 \
aws_account_id.dkr.ecr.aws_region.amazonaws.com/greeting-api-openjdk-17-oracle:0.0.1

docker run greeting-api-openjdk-17-oracle:0.0.1
docker ps
docker exec -it container-name bash

docker build --no-cache --pull -t greeting-api-openjdk-17-oracle:0.0.1 . 

docker image tag \
greeting-api-openjdk-17-oracle:0.0.1 \
aws_account_id.dkr.ecr.aws_region.amazonaws.com/greeting-api-openjdk-17-oracle:0.0.1

aws ecr get-login-password | docker login --username AWS --password-stdin aws_account_id.dkr.ecr.aws_region.amazonaws.com

aws ecr create-repository \
    --repository-name greeting-api-openjdk-17-oracle \
    --image-scanning-configuration scanOnPush=true

docker push aws_account_id.dkr.ecr.aws_region.amazonaws.com/greeting-api-openjdk-17-oracle:0.0.1

aws ecr batch-delete-image \
      --repository-name greeting-api-openjdk-17-oracle \
      --image-ids imageTag=0.0.1

kubectl apply -f greeting-api-deployment.yaml
kubectl apply -f greeting-api-service.yaml

kubectl delete pod pod_name
kubectl delete pod pod_name

kubectl delete -f greeting-api-service.yaml
kubectl delete -f greeting-api-deployment.yaml

